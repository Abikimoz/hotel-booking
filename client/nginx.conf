server {
    listen 80;
    server_name hexling.ru;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name hexling.ru;
    http2 on;
    
    ssl_certificate /etc/letsencrypt/live/hexling.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hexling.ru/privkey.pem;
    
    root /usr/share/nginx/html;
    index index.html;

    gzip on;

    # Proxy all API requests directly to the backend
    location /api/ {
        proxy_pass http://server:8080/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://hexling.ru' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://hexling.ru' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 3600;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # WebSocket support
    location /ws {
        proxy_pass http://server:8080/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
    }
    
    # Swagger UI
    location /swagger-ui/ {
        proxy_pass http://server:8080/swagger-ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1d;
    }

    # SPA support
    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Error handling
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 