/**
* {{description}}{{^description}}{{classname}}{{/description}}{{#isDeprecated}}
    * @deprecated{{/isDeprecated}}
*/
{{>additionalModelTypeAnnotations}}
{{#isDeprecated}}
    @Deprecated
{{/isDeprecated}}
{{#description}}
    @Schema(description = "{{{description}}}"{{#deprecated}}, deprecated = true{{/deprecated}})
{{/description}}
{{#discriminator}}
    {{>typeInfoAnnotation}}
{{/discriminator}}
{{#jackson}}
    {{#isClassnameSanitized}}
        {{^hasDiscriminatorWithNonEmptyMapping}}
            @JsonTypeName("{{name}}")
        {{/hasDiscriminatorWithNonEmptyMapping}}
    {{/isClassnameSanitized}}
{{/jackson}}
{{#withXml}}
    {{>xmlAnnotation}}
{{/withXml}}
{{>generatedAnnotation}}
{{#vendorExtensions.x-jpa-entity}}
    @Entity
    @Table(name = "{{#vendorExtensions.x-table-name}}{{vendorExtensions.x-table-name}}{{/vendorExtensions.x-table-name}}{{^vendorExtensions.x-table-name}}{{#snakeCase}}{{classVarName}}{{/snakeCase}}{{/vendorExtensions.x-table-name}}")
{{/vendorExtensions.x-jpa-entity}}
public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}} {
{{#serializableModel}}
    private static final long serialVersionUID = 1L;
{{/serializableModel}}
{{#vendorExtensions.x-jpa-entity}}
    @CreationTimestamp
    @Column(name = "created_at", updatable = false)
    private OffsetDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at")
    private OffsetDateTime updatedAt;
{{/vendorExtensions.x-jpa-entity}}

{{#vars}}
    {{#isEnum}}
        {{^isContainer}}
            {{>enumClass}}
        {{/isContainer}}
    {{/isEnum}}
    {{#vendorExtensions.x-primary-key}}
        @Id
    {{/vendorExtensions.x-primary-key}}
    {{#vendorExtensions.x-generated-value}}
        @GeneratedValue(strategy = GenerationType.IDENTITY)
    {{/vendorExtensions.x-generated-value}}
    {{#useBeanValidation}}
        {{>beanValidation}}
    {{/useBeanValidation}}
    @Column(name = "{{#snakeCase}}{{baseName}}{{/snakeCase}}")
    @Schema(
    description = "{{{description}}}",
    requiredMode = {{#required}}Schema.RequiredMode.REQUIRED{{/required}}{{^required}}Schema.RequiredMode.NOT_REQUIRED{{/required}},
    example = "{{{example}}}"
    )
    {{#jackson}}
        @JsonProperty("{{baseName}}")
    {{/jackson}}
    private {{>nullableDataType}} {{name}}{{#defaultValue}} = {{{.}}}{{/defaultValue}};
{{/vars}}

public {{classname}}() {
}

{{#hasRequiredVars}}
    public {{classname}}({{#requiredVars}}{{{datatypeWithEnum}}} {{name}}{{^-last}}, {{/-last}}{{/requiredVars}}) {
    {{#vars}}
        {{#required}}
            this.{{name}} = {{name}};
        {{/required}}
    {{/vars}}
    }
{{/hasRequiredVars}}

{{#vars}}
    public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
    return this;
    }

    {{^lombok.Getter}}
        public {{>nullableDataType}} {{getter}}() {
        return {{name}};
        }
    {{/lombok.Getter}}

    {{^lombok.Setter}}
        public void {{setter}}({{>nullableDataType}} {{name}}) {
        this.{{name}} = {{name}};
        }
    {{/lombok.Setter}}
{{/vars}}

@Override
public boolean equals(Object o) {
if (this == o) {
return true;
}
if (o == null || getClass() != o.getClass()) {
return false;
}
{{classname}} {{classVarName}} = ({{classname}}) o;
return {{#vars}}Objects.equals(this.{{name}}, {{classVarName}}.{{name}}){{^-last}} &&
{{/-last}}{{/vars}}{{#parent}} &&
super.equals(o){{/parent}};
}

@Override
public int hashCode() {
return Objects.hash({{#vars}}{{name}}{{^-last}}, {{/-last}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
}

@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class {{classname}} {\n");
{{#parent}}
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
{{/parent}}
{{#vars}}
    sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
{{/vars}}
sb.append("}");
return sb.toString();
}

private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}
}
